// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'dish.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Dish _$DishFromJson(Map<String, dynamic> json) => Dish(
      id: json['id'] as int?,
      tpProductCode: json['tpProductCode'] as String?,
      tpCategoryCode: json['tpCategoryCode'] as String?,
      tpDealCode: json['tpDealCode'] as String?,
      tpUom: json['tpUom'] as String?,
      tpTreatAsCombo: json['tpTreatAsCombo'],
      peopleFed: json['peopleFed'] as int?,
      brandName: json['brandName'] as String?,
      name: json['name'] as String?,
      desc: json['desc'] as String?,
      restId: json['restId'] as int?,
      price: json['price'] as String?,
      basePrice: json['basePrice'] as String?,
      discountPrice: json['discountPrice'] as String?,
      taxAmount: json['taxAmount'] as String?,
      itemCost: json['itemCost'],
      totalStock: json['totalStock'],
      searchTags: json['searchTags'],
      img_url: json['img_url'] as String?,
      isdeal: json['isdeal'] as int?,
      totalOrders: json['totalOrders'] as int?,
      subsectionId: json['subsectionId'] as int?,
      restbrId: json['restbrId'],
      stock: json['stock'],
      availability: json['availability'] as int?,
      specialDeliveryType: json['specialDeliveryType'] as String?,
      status: json['status'] as int?,
      priority: json['priority'] as int?,
      allowedQty: json['allowedQty'] as int?,
      lastUpdateAt: json['lastUpdateAt'] == null
          ? null
          : DateTime.parse(json['lastUpdateAt'] as String),
      lastUpdateBy: json['lastUpdateBy'] as String?,
      applyCommission: json['applyCommission'] as int?,
      linkedPromotion: json['linkedPromotion'],
      emShare: json['emShare'],
      isPromoDish: json['isPromoDish'] as int?,
      isUpsellingItem: json['isUpsellingItem'] as int?,
      isAppOnly: json['isAppOnly'] as int?,
      restaurantShare: json['restaurantShare'],
      tpShare: json['tpShare'],
      preparationTimeMins: json['preparationTimeMins'] as int?,
      calories: json['calories'] as int?,
      createdAt: json['createdAt'] == null
          ? null
          : DateTime.parse(json['createdAt'] as String),
      isAddedToFbcat: json['isAddedToFbcat'] as int?,
      isGlobalDelivery: json['isGlobalDelivery'] as int?,
      minStockNotify: json['minStockNotify'] as int?,
      maxStockAllowed: json['maxStockAllowed'] as int?,
      dishOptions: (json['dishOptions'] as List<dynamic>?)
          ?.map((e) => DishOption.fromJson(e as Map<String, dynamic>))
          .toList(),
      dishBranchStatus: json['dishBranchStatus'],
      dishImages: json['dishImages'] as List<dynamic>?,
    );

Map<String, dynamic> _$DishToJson(Dish instance) => <String, dynamic>{
      'id': instance.id,
      'tpProductCode': instance.tpProductCode,
      'tpCategoryCode': instance.tpCategoryCode,
      'tpDealCode': instance.tpDealCode,
      'tpUom': instance.tpUom,
      'tpTreatAsCombo': instance.tpTreatAsCombo,
      'peopleFed': instance.peopleFed,
      'brandName': instance.brandName,
      'name': instance.name,
      'desc': instance.desc,
      'restId': instance.restId,
      'price': instance.price,
      'basePrice': instance.basePrice,
      'discountPrice': instance.discountPrice,
      'taxAmount': instance.taxAmount,
      'itemCost': instance.itemCost,
      'totalStock': instance.totalStock,
      'searchTags': instance.searchTags,
      'img_url': instance.img_url,
      'isdeal': instance.isdeal,
      'totalOrders': instance.totalOrders,
      'subsectionId': instance.subsectionId,
      'restbrId': instance.restbrId,
      'stock': instance.stock,
      'availability': instance.availability,
      'specialDeliveryType': instance.specialDeliveryType,
      'status': instance.status,
      'priority': instance.priority,
      'allowedQty': instance.allowedQty,
      'lastUpdateAt': instance.lastUpdateAt?.toIso8601String(),
      'lastUpdateBy': instance.lastUpdateBy,
      'applyCommission': instance.applyCommission,
      'linkedPromotion': instance.linkedPromotion,
      'emShare': instance.emShare,
      'isPromoDish': instance.isPromoDish,
      'isUpsellingItem': instance.isUpsellingItem,
      'isAppOnly': instance.isAppOnly,
      'restaurantShare': instance.restaurantShare,
      'tpShare': instance.tpShare,
      'preparationTimeMins': instance.preparationTimeMins,
      'calories': instance.calories,
      'createdAt': instance.createdAt?.toIso8601String(),
      'isAddedToFbcat': instance.isAddedToFbcat,
      'isGlobalDelivery': instance.isGlobalDelivery,
      'minStockNotify': instance.minStockNotify,
      'maxStockAllowed': instance.maxStockAllowed,
      'dishOptions': instance.dishOptions,
      'dishBranchStatus': instance.dishBranchStatus,
      'dishImages': instance.dishImages,
    };
